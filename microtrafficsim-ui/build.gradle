plugins {
    id 'application'
    id 'edu.sc.seis.macAppBundle' version '2.1.6'
    id 'nebula.ospackage' version '4.4.0'
}

dependencies {
    compile project(':microtrafficsim-core')
}

// handle command line arguments via '-Dexec.args="..."'
run {
    if (System.getProperty("exec.args")) {
        args System.getProperty("exec.args").split()
    }
}


def distName = 'microtrafficsim'
def distVersion = '1.0.0'
def distRelease = '1'

def main = 'microtrafficsim.ui.Main'


mainClassName = "$main"
macAppBundle {
    mainClassName = "$main"
}
jar {
     manifest {
         attributes "Main-Class": "$main"
     }

     from {
         configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
     }
 }


ospackage {
    packageName = "$distName"
    version = "$distVersion"
    release = "$distRelease"
    os = LINUX
    type = BINARY

    maintainer = 'github.com/sgs-us'
    uploaders = 'github.com/sgs-us'

    into "/usr/share/$distName"

    from(jar.outputs.files) {
        into 'lib'
    }
    from(configurations.runtime) {
        into 'lib'
    }
    from(startScripts.outputDir) {
        into 'bin'
        exclude '*.bat'
        fileMode 0550
    }

    link("/usr/bin/$distName", "/usr/share/$distName/bin/$distName")
}

task distRpm(type: Rpm) {
    dependsOn startScripts
}

task distDeb(type: Deb) {
    dependsOn startScripts
}

task distApp(type: Zip) {
    dependsOn createApp

    from fileTree("${->project.buildDir}/${->project.macAppBundle.appOutputDir}/${->project.macAppBundle.appName}.app") {
        into 'microtrafficsim.app'
    }

    destinationDir = file("${->project.buildDir}/distributions")
    archiveName "$distName" + "_"+ "$distVersion" + "-" + "$distRelease"+ "_all.app.zip"
}

distZip {
    archiveName "$distName" + "_"+ "$distVersion" + "-" + "$distRelease"+ "_all.zip"
}

task distAll {
    dependsOn distZip
    dependsOn distRpm
    dependsOn distDeb
    dependsOn distApp
}


// set jar, distribution and application name
jar.baseName = 'microtrafficsim-ui'
distributions.main.baseName = 'microtrafficsim-ui'
startScripts.applicationName = 'microtrafficsim'

applicationDefaultJvmArgs = ['-Xmx3g']

