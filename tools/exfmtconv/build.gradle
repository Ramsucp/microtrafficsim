plugins {
    id 'application'
    id "edu.sc.seis.macAppBundle" version "2.1.6"
}

dependencies {
    compile project(':microtrafficsim-core')

    // SLF4J
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.21'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.7'

    compile group: 'commons-cli', name: 'commons-cli', version: '1.4'
}

// handle command line arguments via '-Dexec.args="..."'
run {
    if (System.getProperty("exec.args")) {
        args System.getProperty("exec.args").split()
    }
}


def distName = project.rootProject.ext.get("distname")
def distVersion = project.rootProject.ext.get("distver")
def distRelease = project.rootProject.ext.get("distrel")

def toolName = "exfmtconv"
def baseName = "${distName}-${toolName}"
def jarName = "${distName}-tools-${toolName}"

def main = 'microtrafficsim.tools.exfmtconv.ExchangeFormatConverter'


mainClassName = "${main}"
macAppBundle {
    appName =  "${baseName}"
    dmgName = "${baseName}_${distVersion}-${distRelease}_all.app"

    version = "${distVersion}-${distRelease}"

    mainClassName = "${main}"
    bundleJRE = false
}

distZip {
    archiveName = "${baseName}"

    doLast {
        def name = "${baseName}_${distVersion}-${distRelease}_all.zip"
        archivePath.renameTo(file("${->project.buildDir}/distributions/${name}"))
    }
}


// set jar and distribution name
jar.baseName = "${jarName}"
distributions.main.baseName = "${jarName}"
startScripts.applicationName = "${baseName}"

applicationDefaultJvmArgs = ["-Xmx3g"]
